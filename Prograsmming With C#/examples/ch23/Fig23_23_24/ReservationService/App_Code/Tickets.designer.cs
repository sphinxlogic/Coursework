#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="Tickets")]
public partial class TicketsDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertSeat(Seat instance);
  partial void UpdateSeat(Seat instance);
  partial void DeleteSeat(Seat instance);
  #endregion
	
	public TicketsDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TicketsConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public TicketsDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public TicketsDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public TicketsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public TicketsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Seat> Seats
	{
		get
		{
			return this.GetTable<Seat>();
		}
	}
}

[Table(Name="dbo.Seats")]
public partial class Seat : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Number;
	
	private string _SeatType;
	
	private string _SeatClass;
	
	private System.Nullable<bool> _Taken;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumberChanging(string value);
    partial void OnNumberChanged();
    partial void OnSeatTypeChanging(string value);
    partial void OnSeatTypeChanged();
    partial void OnSeatClassChanging(string value);
    partial void OnSeatClassChanged();
    partial void OnTakenChanging(System.Nullable<bool> value);
    partial void OnTakenChanged();
    #endregion
	
	public Seat()
	{
		OnCreated();
	}
	
	[Column(Storage="_Number", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Number
	{
		get
		{
			return this._Number;
		}
		set
		{
			if ((this._Number != value))
			{
				this.OnNumberChanging(value);
				this.SendPropertyChanging();
				this._Number = value;
				this.SendPropertyChanged("Number");
				this.OnNumberChanged();
			}
		}
	}
	
	[Column(Storage="_SeatType", DbType="VarChar(50)")]
	public string SeatType
	{
		get
		{
			return this._SeatType;
		}
		set
		{
			if ((this._SeatType != value))
			{
				this.OnSeatTypeChanging(value);
				this.SendPropertyChanging();
				this._SeatType = value;
				this.SendPropertyChanged("SeatType");
				this.OnSeatTypeChanged();
			}
		}
	}
	
	[Column(Storage="_SeatClass", DbType="VarChar(50)")]
	public string SeatClass
	{
		get
		{
			return this._SeatClass;
		}
		set
		{
			if ((this._SeatClass != value))
			{
				this.OnSeatClassChanging(value);
				this.SendPropertyChanging();
				this._SeatClass = value;
				this.SendPropertyChanged("SeatClass");
				this.OnSeatClassChanged();
			}
		}
	}
	
	[Column(Storage="_Taken", DbType="Bit")]
	public System.Nullable<bool> Taken
	{
		get
		{
			return this._Taken;
		}
		set
		{
			if ((this._Taken != value))
			{
				this.OnTakenChanging(value);
				this.SendPropertyChanging();
				this._Taken = value;
				this.SendPropertyChanged("Taken");
				this.OnTakenChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
